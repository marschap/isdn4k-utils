# Makefile for i4l-faq
# (c) 1997 by Matthias Heßler (MatHes)
#
# Generate FAQ, support FAQ development

# Directories
# After generation, install files in TARGET_DIR (if non-empty)
TARGET_DIR = @TARGET_DIR@

# Program file names
ZIP     = @C_ZIP@
GZIP    = @C_GZIP@
SGML2HTML = @C_SGML2HTML@
SGML2TXT = @C_SGML2TXT@
INSTALL = @INSTALL@

# Source file names
SRC = i4lfaq.sgml
OUT_NAME = i4lfaq
OUT_HTML = $(OUT_NAME).html
# please note that also files like i4lfaq-1.html, i4lfaq-11.html,...
# will be generated...
OUT_TXT = $(OUT_NAME).txt


# *** Generate FAQ ***

# Generate all FAQ versions
all: Makefile $(OUT_HTML) $(OUT_TXT)


# Generate html version of FAQ
html: $(OUT_HTML)

$(OUT_HTML): $(SRC)
	$(SGML2HTML) $(SRC)


# Generate text version of FAQ
txt: $(OUT_TXT)

$(OUT_TXT): $(SRC)
	$(SGML2TXT) -f $(SRC)


# Generate all zip versions
zip: $(OUT_NAME)-sgml.zip $(OUT_NAME)-html.zip $(OUT_NAME)-txt.zip 
gz: $(OUT_NAME)-sgml.gz $(OUT_NAME)-html.gz $(OUT_NAME)-txt.gz 
# Please note, that the compressing of html files doesn't quite work as
# you would expect...


# Compress sgml
$(OUT_NAME)-sgml.zip: $(SRC)
	$(ZIP) -l $(OUT_NAME)-sgml.zip $(SRC)
$(OUT_NAME)-sgml.gz: $(SRC)
	$(GZIP) -Ncf $(SRC) > $(OUT_NAME)-sgml.gz

# Compress html
$(OUT_NAME)-html.zip: $(OUT_NAME).html
	$(ZIP) -l $(OUT_NAME)-html.zip $(OUT_NAME)*.html
$(OUT_NAME)-html.gz: $(OUT_NAME).html
	$(GZIP) -Ncf $(OUT_NAME)*.html > $(OUT_NAME)-html.gz

# Compress txt
$(OUT_NAME)-txt.zip: $(OUT_TXT)
	$(ZIP) -l $(OUT_NAME)-txt.zip $(OUT_TXT)
$(OUT_NAME)-txt.gz: $(OUT_TXT)
	$(GZIP) -Ncf $(OUT_TXT) > $(OUT_NAME)-txt.gz


# *** General Stuff ***

# Install output files
install: all
	if [ -n "$(TARGET_DIR)" ]; then \
		$(INSTALL) -m 0755 -d $(DESTDIR)$(TARGET_DIR); \
		$(INSTALL) -m 0644 $(SRC) $(DESTDIR)$(TARGET_DIR); \
		$(INSTALL) -m 0644 $(OUT_NAME)*.html $(DESTDIR)$(TARGET_DIR); \
		$(INSTALL) -m 0644 $(OUT_TXT) $(DESTDIR)$(TARGET_DIR); \
	fi

# Un-install output files
uninstall:
	set -e; \
	if [ -n "$(TARGET_DIR)" ]; then \
		cd $(DESTDIR)$(TARGET_DIR); \
		rm -f $(SRC) ; \
		for i in $(OUT_NAME)*.html ; do \
			rm -f $$i ; \
		done ; \
		rm -f $(OUT_TXT) ; \
	fi

# Cleanup
clean:
	if [ -e *~ ]; then rm *~; fi
	if [ -e \#* ]; then rm \#*; fi
	if [ -e *.orig ]; then rm *.orig; fi
	set -e; \
	if [ -e $(OUT_TXT) ]; then rm -f $(OUT_TXT); fi; \
	if [ -e $(OUT_NAME)-sgml.zip ]; then rm -f $(OUT_NAME)-sgml.zip; fi; \
	if [ -e $(OUT_NAME)-sgml.gz ]; then rm -f $(OUT_NAME)-sgml.gz; fi; \
	if [ -e $(OUT_NAME)-html.zip ]; then rm -f $(OUT_NAME)-html.zip; fi; \
	if [ -e $(OUT_NAME)-html.gz ]; then rm -f $(OUT_NAME)-html.gz; fi; \
	if [ -e $(OUT_NAME)-txt.zip ]; then rm -f $(OUT_NAME)-txt.zip; fi; \
	if [ -e $(OUT_NAME)-txt.gz ]; then rm -f $(OUT_NAME)-txt.gz; fi; \
	for i in $(OUT_NAME)*.html ; do \
		rm -f $$i ; \
	done

config:
	./configure

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

distclean: clean
	rm -f config.* Makefile
